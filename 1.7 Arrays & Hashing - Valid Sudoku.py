test1 = [[
  "5","3",".", ".","7",".", ".",".","."]
,["6",".",".", "1","9","5", ".",".","."]
,[".","9",".", ".",".",".", ".","6","."]

,["8",".",".", ".","6",".", ".",".","3"]
,["4",".",".", "8",".","3", ".",".","1"]
,["7",".",".", ".","2",".", ".",".","6"]

,[".","6",".", ".",".",".", "2","8","."]
,[".",".",".", "4","1","9", ".",".","5"]
,[".",".",".", ".","8",".", ".","7","9"]]

test2 = [[
  "8","3",".", ".","7",".", ".",".","."]
,["6",".",".", "1","9","5", ".",".","."]
,[".","9","8", ".",".",".", ".","6","."]

,["8",".",".", ".","6",".", ".",".","3"]
,["4",".",".", "8",".","3", ".",".","1"]
,["7",".",".", ".","2",".", ".",".","6"]

,[".","6",".", ".",".",".", "2","8","."]
,[".",".",".", "4","1","9", ".",".","5"]
,[".",".",".", ".","8",".", ".","7","9"]]

def isValidSudoku(board):
    rows    = {0:set(), 1:set(), 2:set(), 3:set(), 4:set(), 5:set(), 6:set(), 7:set(), 8:set()}
    columns = {0:set(), 1:set(), 2:set(), 3:set(), 4:set(), 5:set(), 6:set(), 7:set(), 8:set()}
    squares = {(0,0):set(), (0,1):set(), (0,2):set(), (1,0):set(), (1,1):set(), (1,2):set(), (2,0):set(), (2,1):set(), (2,2):set()}

    for r in range(len(board)):
        for c in range(len(board[0])):
            if board[r][c] == '.':
                continue
            
            if (board[r][c] in rows[r] or
                board[r][c] in columns[c] or
                board[r][c] in squares[(r//3, c//3)]):
                return False
            else:
                rows[r].add(board[r][c])
                columns[c].add(board[r][c])
                squares[(r//3, c//3)].add(board[r][c])

    return True
    
print(isValidSudoku(test1))